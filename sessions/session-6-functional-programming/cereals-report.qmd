---
title: UK Crop Yields
subtitle: From 1885 to 2023
author: "Daniel O'Callaghan"
date: "2025-06-18"
date-modified: today
date-format: D MMMM YYYY
code-fold: true
format:
  html:
    embed-resources: true
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(gt)
library(afcharts)

theme_set(theme_af(base_size = 12))

clean_labels <- function(x) {
    gsub("_", " ", x) |>
        tools::toTitleCase()
}
```


```{r}
#| label: load-data
#| message: false

cereals_df <- read_csv(
    here::here("data/cereals.csv"),
    name_repair = janitor::make_clean_names
) |>
    pivot_longer(
        cols = -year,
        names_to = "cereal",
        values_to = "yield",
        values_drop_na = TRUE
    ) |>
    filter(cereal != "triticale")
```

```{r}
#| label: calculations

summary_funcs <- list(
    avg = \(x) mean(x, na.rm = TRUE),
    median = \(x) median(x, na.rm = TRUE),
    sd = \(x) sd(x, na.rm = TRUE),
    max = \(x) max(x, na.rm = TRUE),
    min = \(x) min(x, na.rm = TRUE)
)

cereals_summary <- cereals_df |>
    summarise(
        years = paste(min(year), "-", max(year)),
        across(.cols = yield, .fns = summary_funcs),
        # Creates the data needed for the nanoplot
        all_yield = paste(yield, collapse = ","),
        .by = cereal
    )

year_range <- range(cereals_df$year)
crops <- unique(cereals_df$cereal) |> clean_labels()

rand_crop <- sample(unique(cereals_df$cereal)[2:6], 1)
rand_year_range <- range(cereals_df$year[cereals_df$cereal == rand_crop])

wheat_crop_avg_yield <- cereals_summary$yield_avg[
    cereals_summary$cereal == "wheat"
]
rand_crop_avg_yield <- cereals_summary$yield_avg[
    cereals_summary$cereal == rand_crop
]
```


## Overview

This is a small report on crop yields in the UK from `r year_range[1]` to `r year_range[2]`. It will explore the following crops:

`r paste("-", crops, collapse = "\n")`

Data are sourced from [Defra](https://www.gov.uk/government/statistics/cereal-and-oilseed-rape-production).


## Yields Over Time

@fig-crop-timeseries presents the yield for the `r length(crops)` crops. 

```{r}
#| label: fig-crop-timeseries
#| fig-align: center
#| fig-cap: "Timeseries of crop yields in the UK"
#| fig-cap-location: bottom

cereals_df |>
    ggplot(
        mapping = aes(
            x = year,
            y = yield,
            colour = fct_reorder2(cereal, year, yield)
        )
    ) +
    geom_line(linewidth = 0.8) +
    labs(
        title = "Yield of Crops in the UK",
        subtitle = paste0("From ", year_range[1], " to ", year_range[2]),
        x = NULL,
        y = "Yield",
        colour = "Crop",
        caption = "Source: Defra"
    ) +
    scale_x_continuous(expand = expansion(add = 1)) +
    scale_y_continuous(
        limits = c(0, NA),
        expand = expansion(mult = c(0, 0.05)),
        labels = scales::label_number(suffix = " t/ha")
    ) +
    scale_colour_discrete_af(palette = "main6", labels = clean_labels)
```

As can be gleaned from @fig-crop-timeseries, the period of covered for each crop varies. Wheat is covered for the whole of the period `r paste(year_range[1], "to", year_range[2])`, whilst data for `r clean_labels(rand_crop)` only was collected from `r cereals_df$year[cereals_df$cereal == "oilseed_rape"][1]` to `r ifelse(year_range[2] == rand_year_range[2], "present", rand_year_range[2])`.

## Yield Statistics

Looking as summary statistics in @tbl-summary-stats, we can see that the average yield for wheat is `r round(wheat_crop_avg_yield, digits = 1)` tonnes per hectare, whilst `r round(rand_crop_avg_yield, digits = 1)` tonnes per hectare was the average yields for `r clean_labels(rand_crop)`.

```{r}
#| label: tbl-summary-stats
#| tbl-cap: "Summary statistics of UK crop yields"
#| tbl-cap-location: top

cereals_summary |>
    gt(rowname_col = "cereal") |>
    # Add a title and subtitle to the table
    tab_header(
        title = md("**Summary Statistics of UK Crop Yields**"),
        subtitle = md(paste0(
            "*From ",
            year_range[1],
            " to ",
            year_range[2],
            "*"
        ))
    ) |>
    # Add a source note to the bottom of the table
    tab_source_note(md("***Source:** Defra*")) |>
    # Merge min and max to create a range column
    cols_merge_range(
        col_begin = yield_min,
        col_end = yield_max,
        sep = " - "
    ) |>
    # Format cereals column with function
    fmt(columns = cereal, fns = clean_labels) |>
    # Format all the columns starting with yield
    fmt_number(columns = starts_with("yield"), decimals = 1) |>
    cols_nanoplot(
        columns = all_yield,
        plot_type = "boxplot",
        new_col_label = "Distribution"
    ) |>
    # Change the column names
    cols_label(
        cereal = "Cereal",
        years = "Years",
        yield_avg = "Average",
        yield_median = "Median",
        yield_sd = "Standard Deviation",
        yield_min = "Range"
    ) |>
    cols_align(align = "center", columns = -cereal) |>
    cols_width(
        starts_with("yield") ~ px(100),
        years ~ px(130),
        all_yield ~ px(200)
    )
```





